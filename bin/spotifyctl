#!/usr/bin/env python3
import argparse
import sys
import dbus

BUS_INFO   = ('org.mpris.MediaPlayer2.spotify', '/org/mpris/MediaPlayer2')
PROPS_IFC  = 'org.freedesktop.DBus.Properties'
ACTION_IFC = 'org.mpris.MediaPlayer2.Player'


# let's hope I never need this again {{{
# def fixenv():
    # # Repairs the environment vars so dbus works
    # try:
        # # Get spotify's pid
        # pid = sp.check_output([
            # 'pgrep', '-o', '-u',
            # os.getenv('USER'),
            # 'spotify'
        # ]).strip()

        # # Dump it's environment
        # with open('/proc/{}/environ'.format(pid)) as f:
            # env = f.read().strip('\x00').split('\x00')

        # # Find the dbus address and export that for us
        # dbus_key = 'DBUS_SESSION_BUS_ADDRESS'
        # dbus_val = next(v.split('=', 1)[1] for v in env if v.startswith(dbus_key))
        # os.putenv(dbus_key, dbus_val)
    # except sp.CalledProcessError:
        # # Spotify probably isn't running
        # pass
# }}}


def connect(ifc):
    try:
        bus = dbus.SessionBus()
        proxy = bus.get_object(*BUS_INFO)
        return dbus.Interface(proxy, ifc)
    except dbus.exceptions.DBusException:
        print('OFFLINE')
        exit(1)


def get_status():
    print(connect(PROPS_IFC).Get(ACTION_IFC, 'PlaybackStatus'))


def get_metadata(key):
    md = connect(PROPS_IFC).Get(ACTION_IFC, 'Metadata')
    val = md.get(f'xesam:{key}')
    print(val[0] if isinstance(val, dbus.Array) else val)


def send_action(a):
    getattr(connect(ACTION_IFC), a)()


opts = {
    'status': get_status,
    'artist': lambda: get_metadata('artist'),
    'song':   lambda: get_metadata('title'),
    'toggle': lambda: send_action('PlayPause'),
    'play':   lambda: send_action('Play'),
    'pause':  lambda: send_action('Pause'),
    'next':   lambda: send_action('Next'),
    'prev':   lambda: send_action('Previous'),
}

parser = argparse.ArgumentParser()
parser.add_argument('cmd', choices=opts.keys())
args = parser.parse_args(sys.argv[1:])

# fixenv()
opts[args.cmd]()
