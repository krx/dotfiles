# Reload sxhkd config
super + Escape
    pkill -USR1 -x sxhkd

# Launcher
super + {shift + p,p}
    QT_AUTO_SCREEN_SCALE_FACTOR=0 rofi -show {drun,run}

# Killer
super + alt + k
    rofi -show kill

# Windows focus
super + w
    rofi -show window

# BSPWM {{{

# Main controls {{{

# Open new terminal
super + Return
    termite

# refresh or quit bspwm
super + alt + {_,shift + }Escape
	{bspc wm -d > "$BSPWM_STATE" && bspc quit, \
	 bspc quit}

# Reload polybar
super + shift + r
    $HOME/.config/polybar/launch.sh

# Reload bspwm config
super + ctrl + shift + r
    $HOME/.config/bspwm/bspwmrc

# Kill a node
super + q
	bspc node -c

# }}}
# Layout controls {{{
# alternate between the tiled and monocle layout
super + {m,button2}
	bspc desktop -l next

# set the window state
super + {t,shift + s,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node '@/' -F {horizontal,vertical}

# Rotate leaves of tree
super + shift + {comma,period}
	bspc node '@/' -R {270, 90}

# Equalize/balance nodes
super + {_,shift + } e
    bspc node '@/' -{B,E}

# Toggle gaps
super + {_,shift +} g
    {bspc config normal_border_color '#282828'; bspc config active_border_color '#282828'; \
     bspc config border_width 2; bspc config window_gap 15, \
     bspc config normal_border_color '#504945'; bspc config active_border_color '#504945'; \
     bspc config border_width 1; bspc config window_gap 0}
# }}}
# Focus/Swap/Send {{{

# Swap the current node and the biggest node
super + shift + Return
	bspc node -s biggest.local

# focus/swap the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

# Preselect in direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# Cancel preselection
super + {_,ctrl + } semicolon
    bspc node -p cancel

# Move the current node into the preselection
super + ctrl + Return
    bspc node -n 'last.!automatic'

# focus or send to the given desktop on the current monitor
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} $(bspc query -M -m focused)':^{1-9,10}'

# Select/send root to the chosen monitor
super + ctrl + {_,shift +} {1-9,0}
    bspc {monitor -f, node "@$(bspc query -D -d focused):/" -m} '^{1-9,10}'

# }}}
# Resize/Move {{{

# expand the tiled space in the given direction
super + {Left,Down,Up,Right}
    bspc node {@west -r -30,@south -r +30,@north -r -30,@east -r +30}

# contract the tiled space in the given direction
super + shift + {Left,Down,Up,Right}
	bspc node {@east -r -30,@north -r +30,@south -r -30,@west -r +30}

# move a floating window
super + ctrl + {Left,Down,Up,Right}
	bspc node --move {-20 0,0 +20,0 -20,+20 0}

# }}}

# }}}
# Fn audio/display {{{

# XF86AudioMute
#     volctl -t
#
# XF86Audio{LowerVolume,RaiseVolume}
#     volctl {-d,-i} 2
#
# XF86MonBrightness{Down,Up}
#     brightctl {-d,-i} 5

# }}}
# Media controls {{{

XF86Audio{Prev,Next,Play}
    spotifyctl {prev,next,toggle}

# }}}
# Misc {{{

super + alt + l
    i3lock-krx

/*XF86PowerOff*/
    /*systemctl suspend*/

super + F7
    touch_toggle

{_,super + } Print
    maim --hidecursor {_,-s} /tmp/screenshot.png; \
    upload -r /tmp/screenshot.png; \
    notify-send 'Screenshot uploaded'

# }}}

